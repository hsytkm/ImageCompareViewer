<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:v="clr-namespace:Graph2D.Views" >

    <Style x:Key="DataGridCellStyle"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment"
                Value="Right" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <!-- 背景の色付けを添付プロパティで無理やり対応(納得してない) -->
                    <Border v:AttachProperties.BackgroundEvent="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" >
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="DataGridRowHeaderStyle"
           TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="MyDataGrid"
           TargetType="{x:Type DataGrid}">
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="CanUserReorderColumns"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="AutoGenerateColumns"
                Value="True" />
        <Setter Property="HeadersVisibility"
                Value="All" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="SelectionMode"
                Value="Extended" />
        <Setter Property="SelectionUnit"
                Value="Cell" />
        <Setter Property="HeadersVisibility"
                Value="None" />
        <Setter Property="CellStyle"
                Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="ColumnHeaderStyle"
                Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="RowHeaderStyle"
                Value="{DynamicResource DataGridRowHeaderStyle}" />
    </Style>

</ResourceDictionary>