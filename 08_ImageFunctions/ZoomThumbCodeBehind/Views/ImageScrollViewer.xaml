<UserControl x:Class="ZoomThumb.Views.ImageScrollViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:r="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:v="clr-namespace:ZoomThumb.Views"
             xmlns:vmec="clr-namespace:ZoomThumb.ViewModels.EventConverters"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <!--  Viewで完結するのでCodeBehindに引っ越した
            <v:BooleanToRenderOptionConverter x:Key="BooleanToRenderOptionConverterKey"/>
            -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ImageScrollViewerStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer x:Name="MyScrollViewer"
                  Style="{StaticResource ScrollViewerImageStyleKey}"
                  v:ImageScrollViewer.ZoomMag="{Binding ImageZoomMag.Value, Mode=TwoWay}"
                  v:ImageScrollViewer.ScrollOffset="{Binding ImageScrollOffset.Value, Mode=TwoWay}"
                  SizeChanged="MyScrollViewer_SizeChanged"
                  PreviewMouseWheel="MyScrollViewer_PreviewMouseWheel">

        <i:Interaction.Triggers>
            <!-- 全表示中の拡大表示 Content側のイベントで処理するように変えた
            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerMouseLeftDownImage, Mode=OneTime}"
                                           IgnoreEventArgs="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerMouseLeftUpImage, Mode=OneTime}"
                                           IgnoreEventArgs="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseMove">
                <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerMouseMove, Mode=OneTime}" >
                    <vmec:MouseMoveEventToPointConverter/>
                </r:EventToReactiveProperty>
            </i:EventTrigger>
            -->

            <!-- 拡大/全表示切り替え(Style無いに押し込みたいがPanel/ContentPresenterにMouseDoubleClickイベントがない(Controlのみ))
                 ◆LeftButtonから自作すればよいけど未対応
            -->
            <i:EventTrigger EventName="MouseDoubleClick">
                <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerMouseDoubleClick, Mode=OneTime}"
                                           IgnoreEventArgs="true" />
            </i:EventTrigger>
            
            <!-- マウスホイールによるズーム  コードビハインドで対応した
            <i:EventTrigger EventName="PreviewMouseWheel">
                <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerMouseWheel, Mode=OneTime}" >
                    <vmec:MouseWheelCtrlEventToDeltaConverter/>
                </r:EventToReactiveProperty>
            </i:EventTrigger>
            -->
        </i:Interaction.Triggers>

        <!-- 子画像のサイズ変更時にScrollBar表示を切り替え(Image側にNotifyOnTargetUpdatedが必要) -->
        <i:Interaction.Behaviors>
            <v:ImageScrollViewerBehavior/>
        </i:Interaction.Behaviors>

        <Image x:Name="MainImage"
               Source="{Binding ImageSource.Value, Mode=OneWay, NotifyOnTargetUpdated=True}"
               Width="{Binding ImageViewWidth.Value, Mode=OneWayToSource}"
               Height="{Binding ImageViewHeight.Value, Mode=OneWayToSource}"
               SizeChanged="MainImage_SizeChanged"
               TargetUpdated="MainImage_TargetUpdated" />


        <!--
               Width="{Binding ImageViewSize.Value.Width, Mode=OneWay}"
               Height="{Binding ImageViewSize.Value.Height, Mode=OneWay}"
            RenderOptions.BitmapScalingMode="{Binding BitmapScalingModeResolution.Value, Mode=OneWay, Converter={StaticResource BooleanToRenderOptionConverterKey}}" />
            Width="{Binding ImageControlSize.Value.Width, Mode=OneWay, NotifyOnTargetUpdated=True}"
            Height="{Binding ImageControlSize.Value.Height, Mode=OneWay, NotifyOnTargetUpdated=True}" 
        -->

    </ScrollViewer>

</UserControl>
