<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:r="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
                    xmlns:v="clr-namespace:ZoomThumb.Views"
                    xmlns:vmec="clr-namespace:ZoomThumb.ViewModels.EventConverters" >

    <!-- スクロールバー右下余白の色対応  http://aonasuzutsuki.hatenablog.jp/entry/2015/12/08/214214 -->
    <Style x:Key="ScrollViewerImageStyleKey"
           TargetType="ScrollViewer">

        <Setter Property="v:ScrollViewerBinding.ScrollOffset"
                Value="{Binding ScrollOffset, Mode=TwoWay}" />

        <!-- ScrollBarの表示はViewModelで管理するのでAutoにしない -->
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Hidden" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}" >
                        <i:Interaction.Triggers>
                            <!-- 起動時のScrollViewerのサイズを取得 -->
                            <i:EventTrigger EventName="Loaded">
                                <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerSize, Mode=OneTime}" >
                                    <vmec:LoadedToSizeConverter/>
                                </r:EventToReactiveProperty>
                            </i:EventTrigger>

                            <!-- ScrollBar込みのScrollViewerのサイズを取得 -->
                            <i:EventTrigger EventName="SizeChanged">
                                <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerSize, Mode=OneTime}" >
                                    <vmec:SizeChangedToSizeConverter/>
                                </r:EventToReactiveProperty>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Local"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" >
                            <!-- マウスの領域外食付き対応 -->
                            <i:Interaction.Behaviors>
                                <v:MouseCaptureBehavior />
                            </i:Interaction.Behaviors>

                            <i:Interaction.Triggers>
                                <!-- 起動時のScrollViewerのサイズを取得 -->
                                <i:EventTrigger EventName="Loaded">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerContentSize, Mode=OneTime}" >
                                        <vmec:LoadedToSizeConverter/>
                                    </r:EventToReactiveProperty>
                                </i:EventTrigger>
                                
                                <!-- ScrollViewerのサイズを取得(ここで取得しないとスクロールバー領域のサイズまで取得してしまい画像端が隠れる) -->
                                <i:EventTrigger EventName="SizeChanged">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerContentSize, Mode=OneTime}" >
                                        <vmec:SizeChangedToSizeConverter/>
                                    </r:EventToReactiveProperty>
                                </i:EventTrigger>

                                <!-- マウスドラッグ判定(画像エリアの操作検出用) -->
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerContentMouseLeftDownImage, Mode=OneTime}" IgnoreEventArgs="True" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerContentMouseLeftUpImage, Mode=OneTime}" IgnoreEventArgs="True" />
                                </i:EventTrigger>

                                <!-- マウスドラッグによる画像表示位置の移動(ScrollBar押下で反応させたくないのでココで処理) -->
                                <i:EventTrigger EventName="MouseMove">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding ScrollViewerContentMouseMove, Mode=OneTime}" >
                                        <vmec:MouseMoveEventToPointConverter/>
                                    </r:EventToReactiveProperty>
                                </i:EventTrigger>

                                <!-- マウス押下時に座標を更新する
                                            マウス座標は画像コントロールからの相対座標で管理しているので、F4切り替え後に操作すると、
                                            座標がワープしたような入力になり表示位置がガクっと動く への対策
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding MouseMoveImage, Mode=OneWay}" >
                                        <vmec:MouseMoveEventToPointConverter/>
                                    </r:EventToReactiveProperty>
                                </i:EventTrigger>
                                    -->
                            </i:Interaction.Triggers>
                        </ScrollContentPresenter>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" >

                            <i:Interaction.Behaviors>
                                <v:ScrollBarBehavior ForceVisibilityCollapsed="{Binding ScrollBarForceVisibilityCollapsed, Mode=OneWay}" />
                            </i:Interaction.Behaviors>

                            <i:Interaction.Triggers>
                                <!-- スクロールバーのサイズ(スクロールバーを除いたエリアを取得する用)
                                <i:EventTrigger EventName="SizeChanged">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding HorizontalScrollBarSize, Mode=OneTime}">
                                        <vmec:SizeChangedToSizeConverter/>
                                    </r:EventToReactiveProperty>
                                </i:EventTrigger>
                                <ei:PropertyChangedTrigger Binding="{Binding Visibility, ElementName=PART_HorizontalScrollBar}">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding HorizontalScrollBarVisible, Mode=OneTime}">
                                        <vmec:VisibilityChangedToBoolConverter/>
                                    </r:EventToReactiveProperty>
                                </ei:PropertyChangedTrigger>
                                -->                                
                                
                                <!-- マウスドラッグ判定(スクロールバーの操作検出用)
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding MouseLeftDownScrollBar, Mode=OneWay}" IgnoreEventArgs="True" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding MouseLeftUpScrollBar, Mode=OneWay}" IgnoreEventArgs="True" />
                                </i:EventTrigger>
                                 -->
                            </i:Interaction.Triggers>
                        </ScrollBar>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" >

                            <i:Interaction.Behaviors>
                                <v:ScrollBarBehavior ForceVisibilityCollapsed="{Binding ScrollBarForceVisibilityCollapsed, Mode=OneWay}" />
                            </i:Interaction.Behaviors>

                            <i:Interaction.Triggers>
                                <!-- スクロールバーのサイズ(スクロールバーを除いたエリアを取得する用)
                                <i:EventTrigger EventName="SizeChanged">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding VerticalScrollBarSize, Mode=OneTime}">
                                        <vmec:SizeChangedToSizeConverter/>
                                    </r:EventToReactiveProperty>
                                </i:EventTrigger>
                                <ei:PropertyChangedTrigger Binding="{Binding Visibility, ElementName=PART_VerticalScrollBar}">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding VerticalScrollBarVisible, Mode=OneTime}">
                                        <vmec:VisibilityChangedToBoolConverter/>
                                    </r:EventToReactiveProperty>
                                </ei:PropertyChangedTrigger>
                                -->

                                <!-- マウスドラッグ判定(スクロールバーの操作検出用)
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding MouseLeftDownScrollBar, Mode=OneWay}" IgnoreEventArgs="True" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <r:EventToReactiveProperty ReactiveProperty="{Binding MouseLeftUpScrollBar, Mode=OneWay}" IgnoreEventArgs="True" />
                                </i:EventTrigger>
                                 -->
                            </i:Interaction.Triggers>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>