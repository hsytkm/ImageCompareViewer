<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

    <Style x:Key="{x:Type ContextMenu}"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="True" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="MenuBorder"
                            Background="{StaticResource SemiactiveBackgroundBrushKey}"
                            BorderBrush="{StaticResource AccentBrushKey}"
                            BorderThickness="1" >
                        <StackPanel IsItemsHost="True"
                                    Margin="2,4"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="True">
                            <Setter TargetName="MenuBorder"
                                    Property="Padding"
                                    Value="0,3,0,3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- https://docs.microsoft.com/ja-jp/dotnet/framework/wpf/controls/menu-styles-and-templates -->
    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid x:Name="Ground"
                          Background="Transparent"
                          Margin="1" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="17" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>

                        <Path x:Name="CheckMark"
                              Width="11"
                              Height="7"
                              IsHitTestVisible="False"
                              SnapsToDevicePixels="False"
                              StrokeThickness="2"
                              Data="M 2 2 L 5 6 M 5 6 L 10 0"
                              Stroke="{StaticResource ForegroundBrushKey}" />

                        <ContentPresenter Grid.Column="1"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="CheckMark"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="CheckMark"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter TargetName="Ground"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrushKey}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource SemiactiveForegroundBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>